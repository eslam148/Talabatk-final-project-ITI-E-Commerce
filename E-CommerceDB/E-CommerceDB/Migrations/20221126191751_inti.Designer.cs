// <auto-generated />
using System;
using E_CommerceDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_CommerceDB.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20221126191751_inti")]
    partial class inti
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_CommerceDB.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModefiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Product_id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Product_id")
                        .IsUnique();

                    b.HasIndex("SessionId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic Devices",
                            IsDeleted = false,
                            Name = "Electronic",
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(793),
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(808)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Electronic Devices",
                            IsDeleted = false,
                            Name = "Clothes",
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(849),
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(850)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Electronic Devices",
                            IsDeleted = false,
                            Name = "goods",
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(866),
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(867)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Complaints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Noted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Complaints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1238),
                            IsDeleted = false,
                            Noted = "Bad Quality",
                            ProductId = 2,
                            Progress = 0
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1262),
                            IsDeleted = false,
                            Noted = "Bad Quality",
                            ProductId = 2,
                            Progress = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1278),
                            IsDeleted = false,
                            Noted = "Bad Quality",
                            ProductId = 2,
                            Progress = 2
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Disc_Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "gg",
                            Disc_Percent = 10m,
                            IsDeleted = false,
                            Name = "hh",
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1151),
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1152)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("E_CommerceDB.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SelledQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inventory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 5,
                            SelledQuantity = 0,
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1107),
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1108)
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 5,
                            SelledQuantity = 0,
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1129),
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1130)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Order_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Payment_id")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Payment_id")
                        .IsUnique();

                    b.HasIndex("userId");

                    b.ToTable("Order_Details", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.OrderItems", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("Order_Details_id")
                        .HasColumnType("int");

                    b.Property<int>("Product_id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Order_Details_id");

                    b.HasIndex("Product_id")
                        .IsUnique();

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.PaymentDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("PaymentDetails", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubCategories_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("discount_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("inventory_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.HasIndex("SubCategories_Id");

                    b.HasIndex("discount_Id")
                        .IsUnique();

                    b.HasIndex("inventory_Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Samsung Phone",
                            IsDeleted = false,
                            Name = "Samasung A32",
                            Price = 5000,
                            Progress = 0,
                            SubCategories_Id = 2,
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1183),
                            deleted_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount_Id = 1,
                            inventory_Id = 2,
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1184)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Samsung Phone",
                            IsDeleted = false,
                            Name = "Samasung A52",
                            Price = 5000,
                            Progress = 0,
                            SubCategories_Id = 2,
                            created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1207),
                            deleted_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount_Id = 1,
                            inventory_Id = 2,
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1208)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.ShoppingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("ShoppingSession", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.SubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Samsung",
                            CategoryId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Appile",
                            CategoryId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Keriaze",
                            CategoryId = 3,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("E_CommerceDB.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilieImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7f20c7b0-a17a-48ab-8a74-f6cba0a9bfae",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32d84ce6-607a-4ec6-b948-b82d8569d377",
                            Created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(970),
                            Email = "Eslam@ss.com",
                            EmailConfirmed = false,
                            First_Name = "Mohamed",
                            IsDeleted = false,
                            Last_Name = "Ahmed",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilieImage = "https://www.w3schools.com/w3images/avatar3.png",
                            SecurityStamp = "219c9561-d7ed-478a-bf67-4e80efa934d8",
                            TwoFactorEnabled = false,
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(972)
                        },
                        new
                        {
                            Id = "c515de9a-16c5-43f3-82cc-6c4847c96bcf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "25144f0d-fe0f-4dfd-8e1c-48496965b742",
                            Created_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1063),
                            Email = "Eslam@ss.com",
                            EmailConfirmed = false,
                            First_Name = "Ahmed",
                            IsDeleted = false,
                            Last_Name = "Amir",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilieImage = "https://www.w3schools.com/w3images/avatar3.png",
                            SecurityStamp = "1984e1a7-4ce4-4c60-af38-51e950d2cead",
                            TwoFactorEnabled = false,
                            modified_at = new DateTime(2022, 11, 26, 21, 17, 49, 662, DateTimeKind.Local).AddTicks(1064)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("address_line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_line2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postal_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("User_Address", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.UserPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("account_no")
                        .HasColumnType("int");

                    b.Property<DateTime>("expire_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymenr_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("User_Payment", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.CartItem", b =>
                {
                    b.HasOne("E_CommerceDB.Product", "Product")
                        .WithOne("CartItem")
                        .HasForeignKey("E_CommerceDB.CartItem", "Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.ShoppingSession", "ShoppingSession")
                        .WithMany("CartItem")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingSession");
                });

            modelBuilder.Entity("E_CommerceDB.Complaints", b =>
                {
                    b.HasOne("E_CommerceDB.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("E_CommerceDB.Product", "Product")
                        .WithMany("Complaints")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("E_CommerceDB.Images", b =>
                {
                    b.HasOne("E_CommerceDB.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_CommerceDB.Order_Details", b =>
                {
                    b.HasOne("E_CommerceDB.PaymentDetails", "PaymentDetails")
                        .WithOne("Order_Details")
                        .HasForeignKey("E_CommerceDB.Order_Details", "Payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("PaymentDetails");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_CommerceDB.OrderItems", b =>
                {
                    b.HasOne("E_CommerceDB.Order_Details", "Order_Details")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Details_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.Product", "product")
                        .WithOne("OrderItems")
                        .HasForeignKey("E_CommerceDB.OrderItems", "Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order_Details");

                    b.Navigation("product");
                });

            modelBuilder.Entity("E_CommerceDB.Product", b =>
                {
                    b.HasOne("E_CommerceDB.User", "Sellyer")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.HasOne("E_CommerceDB.SubCategories", "SubCategories")
                        .WithMany("products")
                        .HasForeignKey("SubCategories_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.Discount", "discount")
                        .WithOne("products")
                        .HasForeignKey("E_CommerceDB.Product", "discount_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.Inventory", "inventory")
                        .WithMany("products")
                        .HasForeignKey("inventory_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sellyer");

                    b.Navigation("SubCategories");

                    b.Navigation("discount");

                    b.Navigation("inventory");
                });

            modelBuilder.Entity("E_CommerceDB.ShoppingSession", b =>
                {
                    b.HasOne("E_CommerceDB.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_CommerceDB.SubCategories", b =>
                {
                    b.HasOne("E_CommerceDB.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_CommerceDB.UserAddress", b =>
                {
                    b.HasOne("E_CommerceDB.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_CommerceDB.UserPayment", b =>
                {
                    b.HasOne("E_CommerceDB.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_CommerceDB.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("E_CommerceDB.Discount", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_CommerceDB.Inventory", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_CommerceDB.Order_Details", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("E_CommerceDB.PaymentDetails", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("E_CommerceDB.Product", b =>
                {
                    b.Navigation("CartItem");

                    b.Navigation("Complaints");

                    b.Navigation("Images");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("E_CommerceDB.ShoppingSession", b =>
                {
                    b.Navigation("CartItem");
                });

            modelBuilder.Entity("E_CommerceDB.SubCategories", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
